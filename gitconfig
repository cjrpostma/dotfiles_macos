[core]
  excludesfile = ~/.gitignore
  editor = nvim
  ignorecase = false
[help]
  autocorrect = prompt
[rerere]
  enabled = true
  autoupdate = true
[commit]
  verbose = true
[rebase]
  autoSquash = true
  autoStash = true
  updateRefs = true
[push]
  default = simple
  autoSetupRemote = true
  followTags = true
[fetch]
  prune = true
  pruneTags = true
  all = true
[column]
  ui = auto
[branch]
  sort = -committerdate
[tag]
  sort = version:refname
[init]
  defaultBranch = main
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
  ui = auto
[alias]
  a = "!git status --short | peco | awk '{print $2}' | xargs git add"
  d = diff
  co = checkout
  ci = commit
  ca = commit -a
  ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
  pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
  st = status
  br = branch
  ba = branch -a
  bm = branch --merged
  bn = branch --no-merged
  df = "!git hist | peco | awk '{print $2}' | xargs -I {} git diff {}^ {}"
  hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
  llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
  open = "!hub browse"
  type = cat-file -t
  dump = cat-file -p
  find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | peco | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
  # edit conflicted file on merge
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  # add conflicted file on merge
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
[hub]
  protocol = https
[github]
  user = cjrpostma
[diff]
  tool = nvimdiff
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
  renames = true
[difftool "nvimdiff"]
  cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
  path = 
[mergetool "nvimdiff"]
  cmd = nvim -d \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process
[ghq]
  root = ~/.ghq
[user]
  name = Chris Postma
  email = 44818815+cjrpostma@users.noreply.github.com
  editor = vim
  excludesfile = ~/.dotfiles/gitignore_global
